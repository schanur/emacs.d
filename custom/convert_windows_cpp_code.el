(defun replace-string-buffer (search-replace-pair)
  "Replace all instances of a string with another string"
  (interactive)
  (goto-char(point-min))
  (while (search-forward (car search-replace-pair) nil t)
    (replace-match (car (cdr search-replace-pair)) t nil)))

(defun replace-string-list (replace-list)
  (mapc 'replace-string-buffer replace-list))

(defun replace-windows-cpp-types ()
  "Replace most proprietary Windows C/C++ data types with the ISO standard ones"
  (interactive)
  (replace-string-list '(
                         ("FLOAT "      "float ")
                         ("FLOAT*"      "float*")
                         ;; ("FLOAT)"      "float)")
                         ;; ("FLOAT["      "float[")
                         ("DOUBLE "     "double ")
                         ("DOUBLE*"     "double*")
                         ;; ("DOUBLE)"     "double)")
                         ;; ("DOUBLE["     "double[")
                         ("UINT "       "unsigned int ")
                         ("UINT*"       "unsigned int*")
                         ;; ("UINT)"       "unsigned int)")
                         ;; ("UINT["       "unsigned int[")
                         ("INT "        "int ")
                         ("INT*"        "int*")
                         ;; ("INT)"        "int)")
                         ;; ("INT["        "int[")
                         ("USHORT "     "uint16_t ")
                         ("USHORT*"     "uint16_t*")
                         ;; ("USHORT)"     "uint16_t)")
                         ;; ("USHORT["     "uint16_t[")
                         ("SHORT "      "int16_t ")
                         ("SHORT*"      "int16_t*")
                         ;; ("SHORT)"      "int16_t)")
                         ;; ("SHORT["      "int16_t[")
                         ("BYTE "       "uint8_t ")
                         ("BYTE*"       "uint8_t*")
                         ;; ("BYTE)"       "uint8_t)")
                         ;; ("BYTE["       "uint8_t[")
                         ("BOOL "       "bool ")
                         ("BOOL*"       "bool*")
                         ;; ("BOOL)"       "bool)")
                         ;; ("BOOL["       "bool[")
                         ("DWORD "      "uint32_t ")
                         ("DWORD*"      "uint32_t*")
                         ;; ("DWORD)"      "uint32_t)")
                         ;; ("DWORD["      "uint32_t[")
                         ("WORD "       "uint16_t ")
                         ("WORD*"       "uint16_t*")
                         ;; ("WORD)"       "uint16_t)")
                         ;; ("WORD["       "uint16_t[")
                         ("WCHAR "      "wchar_t ")
                         ("WCHAR*"      "wchar_t*")
                         ;; ("WCHAR)"      "wchat_t)")
                         ;; ("WCHAR["      "wchat_t[")
                         ("UCHAR "      "uint8_t ")
                         ("UCHAR*"      "uint8_t*")
                         ;; ("UCHAR)"      "uint8_t)")
                         ;; ("UCHAR["      "uint8_t[")
                         ("CHAR "       "char ")
                         ("CHAR*"       "char*")
                         ;; ("CHAR)"       "char)")
                         ;; ("CHAR["       "char[")

                         ("(wstring "   "(std::wstring ")
                         (" wstring "   " std::wstring ")
                         ("(string "    "(std::string ")
                         (" string "    " std::string ")
                         ("(vector "    "(std::vector ")
                         (" vector "    " std::vector ")
                         ("(map "       "(std::map ")
                         (" map "       " std::map ")
                         ("(list "      "(std::list ")
                         (" list "      " std::list ")

                         ("wchat_t"     "wchar_t")

                         )))

;; (setq test-str-list '(
;;                       '("FLOAT"  "float")
;;                       '("DOUBLE" "double")
;;                       '("INT"    "int")
;;                       ))

;; (beginning-of-buffer)

;; (defun my-replace-string ()
;;   (interactive)
;;   (save-excursion
;;     (beginning-of-buffer)
;;     (call-interactively 'replace-string)))
